

# This file was *autogenerated* from the file process_samples.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_1 = Integer(1); _sage_const_78 = Integer(78)
from tqdm import tqdm
load("smart_attack.sage")
seq = []
def process(p, Px, Py, Qx, Qy):
  f = GF(p)
  Px = f(Px)
  Py = f(Py)
  Qx = f(Qx)
  Qy = f(Qy)
  a = ((Py**_sage_const_2  - Qy**_sage_const_2 ) - (Px**_sage_const_3  - Qx**_sage_const_3 )) * (Px - Qx)**-_sage_const_1 
  b = Py**_sage_const_2  - (Px**_sage_const_3  + a*Px)
  C = EllipticCurve([a,b])
  bits = attack(C(Px, Py), C(Qx, Qy))
  seq.append(bits)
with open('samples.txt', 'r') as f:
  for _ in tqdm(range(_sage_const_78 )):
    p, Px, Py, Qx, Qy = map(int, f.readline().strip().split(' '))
    process(p, Px, Py, Qx, Qy)
output = ''
for x in seq:
  output += str(x) + '\n'
with open('bits.txt', 'w') as f:
  f.write(output)

